{"version":3,"file":"static/js/452.e293aa10.chunk.js","mappings":"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","sources":["components/Form.jsx","components/FormInput.jsx","components/ContactForm.jsx","components/ContactListItem.jsx","components/ContactList.jsx","components/Filter.jsx","components/ContactModal.jsx","pages/Contacts.jsx"],"sourcesContent":["import { Button, FormControl } from \"@chakra-ui/react\"\n\nconst Form = ({children, handleSubmit, buttonText}) => {\n  return (\n    <FormControl as='form' onSubmit={handleSubmit} textAlign='center' mb='16px'>\n        {children}\n        <Button type=\"submit\" mt='12px'>{buttonText}</Button>\n    </FormControl>\n  )\n}\n\nexport default Form","import { Container, FormLabel, Input } from '@chakra-ui/react'\nimport React from 'react'\n\nconst FormInput = ({type, name, label, pattern, title, value, styles}) => {\n  return (\n    <Container textAlign='start'>\n    <FormLabel htmlFor={name}  sx={styles} display='inline'>{label}</FormLabel>\n        <Input\n          sx={styles}\n          mb='16px'\n          defaultValue={value}\n          type={type}\n          name={name}\n          id={name}\n          pattern={pattern}\n          title={title}\n          required\n        />\n    </Container>\n  )\n}\n\nexport default FormInput","import { toast } from \"react-toastify\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/fetchContacts';\nimport {selectContacts } from 'redux/selectors';\nimport Form from \"components/Form\";\nimport FormInput from \"components/FormInput\";\n\nconst input = {\n  display: 'inline',\n  maxWidth: '320px',\n}\n\nexport function ContactForm() {\n  const contacts = useSelector(selectContacts)\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    const form = e.currentTarget;\n    e.preventDefault();\n      const newName = form.elements.name.value;\n      const newPhone = form.elements.phone.value; \n\n    if(contacts.find(({name}) => name === newName)) {\n        toast.info(`${newName} is already in contacts`);\n    } else {dispatch(addContact({name: newName,\n      number: newPhone})).unwrap()\n      .then(() => \n      toast.success(`${newName} successfully added!`))\n      .catch(() => \n        toast.error(`Something went wrong, ${newName} not added. Try again.`))     \n    }\n\n    form.reset()\n  }\n\n  return (\n    <>\n      <Form handleSubmit={handleSubmit} buttonText='Add contact'>\n          <FormInput styles={input}\n            type='text' name='name' label='Name'\n            pattern=\"[a-zA-Z ]*\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          />\n\n          <FormInput styles={input}\n            type='tel' name='phone' label='Phone'\n            pattern=\"[0-9]+\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          />\n      </Form>\n    </>\n    )\n}\n","import { DeleteIcon, EditIcon } from \"@chakra-ui/icons\"\nimport { IconButton, ListItem } from \"@chakra-ui/react\"\nimport { useDispatch } from \"react-redux\"\nimport { openModal } from \"redux/contactsSlice\";\n\nconst ContactListItem = ({id, name, number, handleDeleteButton, onOpen}) => {\n    \n    const dispatch = useDispatch();\n    \n    \n\n    const handleItemClick = (id, name, number) => {\n        onOpen()\n        dispatch(openModal({id, name, number}))\n        \n    }\n\n  return (\n    <ListItem mb='12px'>{name}: {number}\n                <IconButton onClick={()=>handleItemClick(id, name, number)}\n                aria-label='Edit current contact' icon={<EditIcon />} \n                size='sm' variant='outline' ml='16px'\n               /><IconButton onClick={() => handleDeleteButton(id, name)} \n                aria-label='Delete current contact' icon={<DeleteIcon />} \n                size='sm' variant='outline' ml='16px'\n               />\n                </ListItem>\n  )\n}\n\nexport default ContactListItem","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { deleteContact, fetchContacts } from 'redux/fetchContacts';\nimport { selectContacts, selectError, selectFilteredContacts, selectIsLoading,  } from 'redux/selectors';\nimport ContactListItem from 'components/ContactListItem';\nimport { List, Text } from '@chakra-ui/react';\n\nexport function ContactList({onOpen}) {\n    const dispatch = useDispatch();\n    const filteredContacts = useSelector(selectFilteredContacts);\n    const contacts = useSelector(selectContacts);\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n    useEffect(() => {\n      dispatch(fetchContacts())    \n    }, [dispatch])\n    \n\n    const handleDeleteButton = (id, name) => {\n        dispatch(deleteContact(id)).unwrap()\n        .then(() => toast.success(`${name} successfully deleted!`) )\n        .catch(() => toast.error(`Something went wrong, ${name} not deleted. Try again`))\n    }\n\n    return (\n    <>\n        {isLoading  && <Text>Loading...</Text>}\n        {error && <Text>{error}</Text>}\n        {filteredContacts && \n            <List>\n                {filteredContacts.map(({id, name, number}) => \n                <ContactListItem key={id} \n                handleDeleteButton={handleDeleteButton}\n                id={id}\n                name={name}\n                number={number}\n                onOpen={onOpen}\n                />)}\n            </List>    \n        }\n        {!isLoading && !error && filteredContacts.length === 0 && contacts.length !== 0 &&\n            <Text>No matches found</Text> \n        }\n        {!isLoading && !error && contacts.length === 0 &&\n            <Text>You don't have contacts yet</Text> \n        }       \n    </> \n    )}\n","import { FormLabel, Input } from '@chakra-ui/react';\nimport { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/filtersSlice';\n\nexport function Filter() {\n    const dispatch = useDispatch();\n\n    const handleChange = (e) => {\n        const {value} = e.target;\n        dispatch(filterContacts(value))\n    }\n    return (\n        <>\n        <FormLabel htmlFor=\"filter\" display='inline' w='210px' mb='16px'>Find contacts by name:</FormLabel>\n        <Input \n        display='inline'\n        type=\"text\"\n        name=\"filter\"\n        id=\"filter\"\n        onChange={handleChange}\n        />\n  </>\n    )\n}","import { Button, FormControl, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay } from \"@chakra-ui/react\"\nimport FormInput from \"./FormInput\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { selectCurrentContact } from \"redux/selectors\"\nimport { editContact } from \"redux/fetchContacts\"\nimport { toast } from \"react-toastify\"\n\nconst input = {\n    display: 'inline',\n    maxWidth: '400px',\n  }\n\nconst ContactModal = ({isOpen, onClose}) => { \n    const dispatch = useDispatch();\n    const  {id, name, number} = useSelector(selectCurrentContact);\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        const form = event.currentTarget;\n        const newName = form.elements.name.value;\n        const newNumber = form.elements.phone.value; \n\n        if(name !== newName || number !== newNumber) {\n            const contact = {\n                id, name: newName, number: newNumber\n            }\n            dispatch(editContact(contact)).unwrap()\n            .then(() => \n            toast.success(`${newName} successfully edited!`))\n            .catch(() => \n              toast.error(`Something went wrong, ${newName} not edited. Try again.`))\n              \n            onClose()\n        } else {\n            toast.info('Any changes edited.')\n        }\n    }\n\n  return (\n    <>\n    <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Edit contact</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <FormControl as='form' onSubmit={handleSubmit} textAlign='center' mb='16px'>\n                <FormInput styles={input}\n                    type='text' name='name' label='Name' value={name}\n                    pattern=\"[a-zA-Z ]*\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                />\n\n                <FormInput styles={input}\n                    type='tel' name='phone' label='Phone' value={number}\n                    pattern=\"[0-9]+\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                />\n                <Button onClick={onClose} variant='ghost' mr={3}>\n                    Go back\n                </Button>\n                <Button type=\"submit\" colorScheme='blue'>Save changes</Button>\n            </FormControl>\n          </ModalBody>\n\n          <ModalFooter>\n            {/* <Button onClick={onClose} variant='ghost' mr={3}>\n              Go back\n            </Button> */}\n            {/* <Button colorScheme='blue'>Save changes</Button> */}\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n      </>\n  )\n}\n\nexport default ContactModal","import { ContactForm } from 'components/ContactForm'\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\nimport { selectFilteredContacts } from 'redux/selectors';\nimport { useSelector } from 'react-redux';\nimport { Heading, useDisclosure } from '@chakra-ui/react';\nimport ContactModal from 'components/ContactModal';\n\nconst Contacts = () => {\n    const filteredContacts = useSelector(selectFilteredContacts);\n    const { onOpen, isOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n        {/* {isModalOpen && <ContactModal />} */}\n        <ContactModal isOpen={isOpen} onClose={onClose} />\n        <ContactForm/>\n        <Heading as='h3' mb='16px'>Contacts ({filteredContacts.length})</Heading>\n        <Filter/>\n        <ContactList onOpen={onOpen} />\n      </>\n  )\n}\n\nexport default Contacts"],"names":["children","handleSubmit","buttonText","as","onSubmit","textAlign","mb","type","mt","name","label","pattern","title","value","styles","htmlFor","sx","display","I","defaultValue","id","required","input","maxWidth","ContactForm","contacts","useSelector","selectContacts","dispatch","useDispatch","Form","e","form","currentTarget","preventDefault","newName","elements","newPhone","phone","find","toast","addContact","number","unwrap","then","catch","reset","FormInput","handleDeleteButton","onOpen","onClick","openModal","handleItemClick","icon","size","variant","ml","ContactList","filteredContacts","selectFilteredContacts","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","deleteContact","map","length","Filter","w","onChange","target","filterContacts","isOpen","onClose","selectCurrentContact","event","newNumber","contact","editContact","mr","colorScheme","useDisclosure"],"sourceRoot":""}