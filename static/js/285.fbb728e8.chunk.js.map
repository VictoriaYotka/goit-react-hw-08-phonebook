{"version":3,"file":"static/js/285.fbb728e8.chunk.js","mappings":"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","sources":["components/Form/FormStyles.js","components/Form/Form.jsx","../node_modules/@chakra-ui/form-control/dist/chunk-RN6VKE3K.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-IJBC3YLI.mjs","../node_modules/@chakra-ui/input/dist/chunk-GYFRIY2Z.mjs","components/FormInput/FormInput.jsx","pages/Register.jsx","../node_modules/@chakra-ui/form-control/dist/chunk-6ZNYZUDD.mjs"],"sourcesContent":["export const form = {\ntextAlign: 'center'\n\n}\n\nexport const btn = {\n    marginTop: '24px',\n}","import { Button, FormControl } from \"@chakra-ui/react\"\nimport { btn, form } from \"./FormStyles\"\n\nconst Form = ({children, handleSubmit, buttonText}) => {\n  return (\n    <FormControl as='form' onSubmit={handleSubmit} sx={form}>\n        {children}\n        <Button type=\"submit\" sx={btn}>{buttonText}</Button>\n    </FormControl>\n  )\n}\n\nexport default Form","import {\n  useFormControlContext,\n  useFormControlStyles\n} from \"./chunk-6ZNYZUDD.mjs\";\n\n// src/form-label.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar FormLabel = forwardRef(function FormLabel2(passedProps, ref) {\n  var _a;\n  const styles = useStyleConfig(\"FormLabel\", passedProps);\n  const props = omitThemingProps(passedProps);\n  const {\n    className,\n    children,\n    requiredIndicator = /* @__PURE__ */ jsx(RequiredIndicator, {}),\n    optionalIndicator = null,\n    ...rest\n  } = props;\n  const field = useFormControlContext();\n  const ownProps = (_a = field == null ? void 0 : field.getLabelProps(rest, ref)) != null ? _a : { ref, ...rest };\n  return /* @__PURE__ */ jsxs(\n    chakra.label,\n    {\n      ...ownProps,\n      className: cx(\"chakra-form__label\", props.className),\n      __css: {\n        display: \"block\",\n        textAlign: \"start\",\n        ...styles\n      },\n      children: [\n        children,\n        (field == null ? void 0 : field.isRequired) ? requiredIndicator : optionalIndicator\n      ]\n    }\n  );\n});\nFormLabel.displayName = \"FormLabel\";\nvar RequiredIndicator = forwardRef(\n  function RequiredIndicator2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    if (!(field == null ? void 0 : field.isRequired))\n      return null;\n    const className = cx(\"chakra-form__required-indicator\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.span,\n      {\n        ...field == null ? void 0 : field.getRequiredIndicatorProps(props, ref),\n        __css: styles.requiredIndicator,\n        className\n      }\n    );\n  }\n);\nRequiredIndicator.displayName = \"RequiredIndicator\";\n\nexport {\n  FormLabel,\n  RequiredIndicator\n};\n","import {\n  useFormControlContext\n} from \"./chunk-6ZNYZUDD.mjs\";\n\n// src/use-form-control.ts\nimport { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\";\nfunction useFormControl(props) {\n  const { isDisabled, isInvalid, isReadOnly, isRequired, ...rest } = useFormControlProps(props);\n  return {\n    ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  };\n}\nfunction useFormControlProps(props) {\n  var _a, _b, _c;\n  const field = useFormControlContext();\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props;\n  const labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : [];\n  if ((field == null ? void 0 : field.hasFeedbackText) && (field == null ? void 0 : field.isInvalid)) {\n    labelIds.push(field.feedbackId);\n  }\n  if (field == null ? void 0 : field.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n  return {\n    ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || void 0,\n    id: id != null ? id : field == null ? void 0 : field.id,\n    isDisabled: (_a = disabled != null ? disabled : isDisabled) != null ? _a : field == null ? void 0 : field.isDisabled,\n    isReadOnly: (_b = readOnly != null ? readOnly : isReadOnly) != null ? _b : field == null ? void 0 : field.isReadOnly,\n    isRequired: (_c = required != null ? required : isRequired) != null ? _c : field == null ? void 0 : field.isRequired,\n    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur)\n  };\n}\n\nexport {\n  useFormControl,\n  useFormControlProps\n};\n","// src/input.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Input = forwardRef(function Input2(props, ref) {\n  const { htmlSize, ...rest } = props;\n  const styles = useMultiStyleConfig(\"Input\", rest);\n  const ownProps = omitThemingProps(rest);\n  const input = useFormControl(ownProps);\n  const _className = cx(\"chakra-input\", props.className);\n  return /* @__PURE__ */ jsx(\n    chakra.input,\n    {\n      size: htmlSize,\n      ...input,\n      __css: styles.field,\n      ref,\n      className: _className\n    }\n  );\n});\nInput.displayName = \"Input\";\nInput.id = \"Input\";\n\nexport {\n  Input\n};\n","import { FormLabel, Input } from '@chakra-ui/react'\nimport React from 'react'\n\nconst FormInput = ({type, name, label}) => {\n  return (\n    <>\n    <FormLabel htmlFor={name} >{label}</FormLabel>\n        <Input\n          type={type}\n          name={name}\n          id={name}\n          required\n        />\n    </>\n  )\n}\n\nexport default FormInput","import Form from 'components/Form/Form';\nimport FormInput from 'components/FormInput/FormInput';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { fetchSignup } from 'redux/fetchUser';\n\nconst Register = () => {\n    const dispatch = useDispatch();\n    const navigate = useNavigate()\n\nconst handleSubmit = (event) => {\n    event.preventDefault();\n\n    const form = event.target;\n    const name = form.elements.user_name.value;\n    const email = form.elements.email.value;\n    const password = form.elements.password.value;\n\n    const userRegisterInfo = {name, email, password};\n    \n    dispatch(fetchSignup(userRegisterInfo)).unwrap()\n    .then(() => {\n        navigate('/')\n        toast.success('Successfully registered. Please, log in')\n    })\n    .catch(() => toast.error(`Something went wrong, try again `))\n\n    form.reset()\n}\n\n  return (\n    <Form\n    handleSubmit={handleSubmit}\n        buttonText='Register'>\n\n        <FormInput \n            type='text'\n            name='user_name'\n            label='Name'\n        />\n        <FormInput \n            type='email'\n            name='email'\n            label='Email'\n        />\n        <FormInput \n            type='password'\n            name='password'\n            label='Password'\n        />\n    </Form>\n  )\n}\n\nexport default Register","// src/form-control.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useCallback, useId, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [FormControlStylesProvider, useFormControlStyles] = createContext({\n  name: `FormControlStylesContext`,\n  errorMessage: `useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormControl />\" `\n});\nvar [FormControlProvider, useFormControlContext] = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n});\nfunction useFormControlProvider(props) {\n  const {\n    id: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n  const uuid = useId();\n  const id = idProp || `field-${uuid}`;\n  const labelId = `${id}-label`;\n  const feedbackId = `${id}-feedback`;\n  const helpTextId = `${id}-helptext`;\n  const [hasFeedbackText, setHasFeedbackText] = useState(false);\n  const [hasHelpText, setHasHelpText] = useState(false);\n  const [isFocused, setFocus] = useState(false);\n  const getHelpTextProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: helpTextId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasHelpText(true);\n      })\n    }),\n    [helpTextId]\n  );\n  const getLabelProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: props2.id !== void 0 ? props2.id : labelId,\n      htmlFor: props2.htmlFor !== void 0 ? props2.htmlFor : id\n    }),\n    [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]\n  );\n  const getErrorMessageProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: feedbackId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    }),\n    [feedbackId]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ...htmlProps,\n      ref: forwardedRef,\n      role: \"group\"\n    }),\n    [htmlProps]\n  );\n  const getRequiredIndicatorProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props2.children || \"*\"\n    }),\n    []\n  );\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    id,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n    getHelpTextProps,\n    getErrorMessageProps,\n    getRootProps,\n    getLabelProps,\n    getRequiredIndicatorProps\n  };\n}\nvar FormControl = forwardRef(\n  function FormControl2(props, ref) {\n    const styles = useMultiStyleConfig(\"Form\", props);\n    const ownProps = omitThemingProps(props);\n    const {\n      getRootProps,\n      htmlProps: _,\n      ...context\n    } = useFormControlProvider(ownProps);\n    const className = cx(\"chakra-form-control\", props.className);\n    return /* @__PURE__ */ jsx(FormControlProvider, { value: context, children: /* @__PURE__ */ jsx(FormControlStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...getRootProps({}, ref),\n        className,\n        __css: styles[\"container\"]\n      }\n    ) }) });\n  }\n);\nFormControl.displayName = \"FormControl\";\nvar FormHelperText = forwardRef(\n  function FormHelperText2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    const className = cx(\"chakra-form__helper-text\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...field == null ? void 0 : field.getHelpTextProps(props, ref),\n        __css: styles.helperText,\n        className\n      }\n    );\n  }\n);\nFormHelperText.displayName = \"FormHelperText\";\n\nexport {\n  useFormControlStyles,\n  useFormControlContext,\n  FormControl,\n  FormHelperText\n};\n"],"names":["form","textAlign","btn","marginTop","children","handleSubmit","buttonText","as","onSubmit","sx","type","FormLabel","forwardRef","passedProps","ref","_a","styles","useStyleConfig","props","omitThemingProps","className","requiredIndicator","jsx","RequiredIndicator","optionalIndicator","rest","field","useFormControlContext","ownProps","getLabelProps","jsxs","chakra","cx","__css","display","isRequired","displayName","useFormControlStyles","getRequiredIndicatorProps","useFormControl","_b","_c","id","disabled","readOnly","required","isInvalid","isReadOnly","isDisabled","onFocus","onBlur","labelIds","hasFeedbackText","push","feedbackId","hasHelpText","helpTextId","join","callAllHandlers","useFormControlProps","ariaAttr","Input","htmlSize","useMultiStyleConfig","input","_className","size","name","label","htmlFor","dispatch","useDispatch","navigate","useNavigate","event","preventDefault","target","userRegisterInfo","elements","user_name","value","email","password","fetchSignup","unwrap","then","toast","catch","reset","createContext","errorMessage","FormControlStylesProvider","strict","FormControlProvider","FormControl","idProp","htmlProps","uuid","useId","labelId","useState","setHasFeedbackText","setHasHelpText","isFocused","setFocus","getHelpTextProps","useCallback","props2","forwardedRef","mergeRefs","node","dataAttr","getErrorMessageProps","getRootProps","role","useFormControlProvider","context","helperText"],"sourceRoot":""}