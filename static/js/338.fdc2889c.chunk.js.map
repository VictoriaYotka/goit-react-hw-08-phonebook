{"version":3,"file":"static/js/338.fdc2889c.chunk.js","mappings":"0LACA,MAAuB,0BAAvB,EAAyD,2BAAzD,EAA4F,2BAA5F,EAAgI,4B,iDCOzH,SAASA,IACd,IAAMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAWC,EAAAA,EAAAA,MAqBjB,OACE,+BACE,kBAAMC,SArBW,SAACC,GACpB,IAAMC,EAAOD,EAAEE,cACfF,EAAEG,iBACA,IAAMC,EAAUH,EAAKI,SAASC,KAAKC,MAC7BC,EAAWP,EAAKI,SAASI,MAAMF,MAEpCb,EAASgB,MAAK,qBAAEJ,OAAmBF,CAArB,IACbO,EAAAA,GAAAA,KAAA,UAAcP,EAAd,4BACIP,GAASe,EAAAA,EAAAA,IAAW,CAACN,KAAMF,EACjCS,OAAQL,KAAYM,SACnBC,MAAK,kBACNJ,EAAAA,GAAAA,QAAA,UAAiBP,EAAjB,wBADM,IAELY,OAAM,kBACLL,EAAAA,GAAAA,MAAA,gCAAqCP,EAArC,0BADK,IAITH,EAAKgB,OACN,EAIiCC,UAAWC,EAAzC,WACE,kBAAOC,QAAQ,OAAOF,UAAWC,EAAjC,mBACA,kBACED,UAAWC,EACXE,KAAK,OACLf,KAAK,OACLgB,GAAG,OACHC,QAAQ,aACRC,MAAM,yIACNC,UAAQ,KAGV,kBAAOL,QAAQ,QAAQF,UAAWC,EAAlC,oBACA,kBACED,UAAWC,EACXE,KAAK,MACLf,KAAK,QACLgB,GAAG,QACHC,QAAQ,SACRC,MAAM,+FACNC,UAAQ,KAGV,mBAAQJ,KAAK,SAASH,UAAWC,EAAjC,6BAIP,C,cC3DD,EAAuB,0BAAvB,EAAwD,0BAAxD,EAA2F,4BCMpF,SAASO,IACZ,IAAM7B,GAAWC,EAAAA,EAAAA,MACX6B,GAAmBhC,EAAAA,EAAAA,IAAYiC,EAAAA,IAC/BC,GAAYlC,EAAAA,EAAAA,IAAYmC,EAAAA,IACxBC,GAAQpC,EAAAA,EAAAA,IAAYqC,EAAAA,KAE1BC,EAAAA,EAAAA,YAAU,WACRpC,GAASqC,EAAAA,EAAAA,MACV,GAAE,CAACrC,IASJ,OACA,gCACKgC,IAAc,sCACdE,IAAS,uBAAIA,IACbJ,IACG,eAAIT,UAAWC,EAAf,SACCQ,EAAiBQ,KAAI,gBAAEb,EAAF,EAAEA,GAAIhB,EAAN,EAAMA,KAAMO,EAAZ,EAAYA,OAAZ,OAAwB,gBAAaK,UAAWC,EAAxB,UAAmCb,EAAnC,KAA2CO,GACzF,mBAAQuB,QAAS,kBAbE,SAACd,EAAIhB,GAC5BT,GAASwC,EAAAA,EAAAA,IAAcf,IAAKR,SAC3BC,MAAK,kBAAMJ,EAAAA,GAAAA,QAAA,UAAiBL,EAAjB,0BAAN,IACLU,OAAM,kBAAML,EAAAA,GAAAA,MAAA,gCAAqCL,EAArC,2BAAN,GACV,CAS8BgC,CAAmBhB,EAAIhB,EAA7B,EAAoCY,UAAWC,EAAhE,sBADuDG,EAAjC,QAM5B,CCnCN,MAAwB,sBAAxB,EAAsD,sB,UCG/C,SAASiB,IACZ,IAAM1C,GAAWC,EAAAA,EAAAA,MAMjB,OACI,iCACA,kBAAOsB,QAAQ,SAASF,UAAWC,EAAnC,qCACA,kBACAD,UAAWC,EACXE,KAAK,OACLf,KAAK,SACLgB,GAAG,SACHkB,SAZiB,SAACxC,GAClB,IAAOO,EAASP,EAAEyC,OAAXlC,MACPV,GAAS6C,EAAAA,EAAAA,GAAenC,GAC3B,MAaJ,CCtBD,MAAgE,wBAAhE,EAAgG,mBCoBhG,EAdiB,WACb,IAAMoB,GAAmBhC,EAAAA,EAAAA,IAAYiC,EAAAA,IACvC,OACE,iCACI,eAAIV,UAAWC,EAAf,wBACA,SAAC1B,EAAD,KAEA,gBAAIyB,UAAWC,EAAf,uBAAqCQ,EAAiBgB,OAAtD,QACA,SAACJ,EAAD,KACA,SAACb,EAAD,MAGP,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/App.module.css?6c4d","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import css from './ContactForm.module.css'\nimport { toast } from \"react-toastify\";\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/fetchContacts';\nimport {selectContacts } from 'redux/selectors';\n\n\nexport function ContactForm() {\n  const contacts = useSelector(selectContacts)\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    const form = e.currentTarget;\n    e.preventDefault();\n      const newName = form.elements.name.value;\n      const newPhone = form.elements.phone.value; \n\n    if(contacts.find(({name}) => name === newName)) {\n        toast.info(`${newName} is already in contacts`);\n    } else {dispatch(addContact({name: newName,\n      number: newPhone})).unwrap()\n      .then(() => \n      toast.success(`${newName} successfully added!`))\n      .catch(() => \n        toast.error(`Something went wrong, ${newName} not added. Try again `))     \n    }\n\n    form.reset()\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={css.form}>\n        <label htmlFor=\"name\" className={css.label}>Name</label>\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          pattern=\"[a-zA-Z ]*\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n\n        <label htmlFor=\"phone\" className={css.label}>Phone</label>\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"phone\"\n          id=\"phone\"\n          pattern=\"[0-9]+\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n\n        <button type=\"submit\" className={css.button}>Add contact</button>\n      </form>\n    </>\n    )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"button\":\"ContactList_button__7kL4l\"};","import { useEffect } from 'react';\nimport css from './ContactList.module.css'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { deleteContact, fetchContacts } from 'redux/fetchContacts';\nimport { selectError, selectFilteredContacts, selectIsLoading,  } from 'redux/selectors';\n\nexport function ContactList() {\n    const dispatch = useDispatch();\n    const filteredContacts = useSelector(selectFilteredContacts);\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n    useEffect(() => {\n      dispatch(fetchContacts())    \n    }, [dispatch])\n    \n\n    const handleDeleteButton = (id, name) => {\n        dispatch(deleteContact(id)).unwrap()\n        .then(() => toast.success(`${name} successfully deleted!`) )\n        .catch(() => toast.error(`Something went wrong, ${name} not deleted. Try again`))\n    }\n\n    return (\n    <>\n        {isLoading  && <p>Loading...</p>}\n        {error && <p>{error}</p>}\n        {filteredContacts &&\n            <ul className={css.list}>\n            {filteredContacts.map(({id, name, number}) => <li key={id} className={css.item}>{name}: {number}\n            <button onClick={() => handleDeleteButton(id, name)} className={css.button}>Delete</button>\n            </li>)}\n        </ul>\n        }  \n    </> \n    )}\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import css from './Filter.module.css'\nimport { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/filtersSlice';\n\nexport function Filter() {\n    const dispatch = useDispatch();\n\n    const handleChange = (e) => {\n        const {value} = e.target;\n        dispatch(filterContacts(value))\n    }\n    return (\n        <>\n        <label htmlFor=\"filter\" className={css.label}>Find contacts by name:</label>\n        <input \n        className={css.input}\n        type=\"text\"\n        name=\"filter\"\n        id=\"filter\"\n        onChange={handleChange}\n        />\n  </>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"App_container__ZdBeZ\",\"main_title\":\"App_main_title__BrNlE\",\"title\":\"App_title__Xrt9W\"};","import { ContactForm } from 'components/ContactForm/ContactForm'\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { selectFilteredContacts } from 'redux/selectors';\nimport css from '../components/App.module.css'\nimport { useSelector } from 'react-redux';\n\nconst Contacts = () => {\n    const filteredContacts = useSelector(selectFilteredContacts);\n  return (\n    <>\n        <h1 className={css.main_title}>Phonebook</h1>\n        <ContactForm/>\n\n        <h2 className={css.title}>Contacts ({filteredContacts.length})</h2>\n        <Filter/>\n        <ContactList />\n      </>\n  )\n}\n\nexport default Contacts"],"names":["ContactForm","contacts","useSelector","selectContacts","dispatch","useDispatch","onSubmit","e","form","currentTarget","preventDefault","newName","elements","name","value","newPhone","phone","find","toast","addContact","number","unwrap","then","catch","reset","className","css","htmlFor","type","id","pattern","title","required","ContactList","filteredContacts","selectFilteredContacts","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","map","onClick","deleteContact","handleDeleteButton","Filter","onChange","target","filterContacts","length"],"sourceRoot":""}